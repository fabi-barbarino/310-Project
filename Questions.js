import React, { Component } from 'react';
import { MDBContainer } from 'mdb-react-ui-kit';
import Modal from 'react-bootstrap/Modal'
import Button from 'react-bootstrap/Button'
import { createQuestion, createAnswer, getQAData, editQuestion } from '../services/services'
import '../../App.css';


// function DynamicHTML() {
//   let data = '';

//       data += ' <div style="border:solid 1px gray;margin-bottom:10px; padding:20px;"> ' 

//       data += ' <div style="margin-bottom:10px;"> ' + 
//                   ' <div >  ' + 
//                           'Question posted by User: <span style="color:red">seba</span> <a href="#">Add your Answer...</a> ' + 
//                   ' </div> ' +
//                   ' <div style="margin-left:30px;">  ' +
//                         'question goes here...<button type="button" onClick={(e) => this.openModal()}  className="btn btn-danger ">Open Modal</button>' +
//                   ' </div> ' +
//               ' </div>';

//       data += ' <div style="border:solid 1px lightgray;margin-bottom:10px;padding:5px;"> ' + 
//                   ' <div className="row " >  ' + 
//                           'User: fabi ' +
//                   ' </div> ' +
//                   ' <div className="row m-2" > ' +
//                           'answer goes here' +
//                   ' </div> ' +
//               ' </div>'

//               data += "</div>";

//     console.log(data);
//     return <div dangerouslySetInnerHTML={ { __html: data}} />;

// }

class Questions extends Component {

  constructor() {
    super()
    this.divRef = React.createRef();
    
    this.state = {
      // Q: what to do w this id bc we need to identify it somehow so users can answer, but the id is generated by the DB !!?
      // I think: dont assign id here, but when we show the question, pull id from db ?
      question: 'empty',         // we don't have questions linked anywhere to a specific team !!!
      numberOfQs: 0,
      answer: 'empty',
      numberOfAs:0,
      showModal: false,
      currQuestionEdit: 'Edit this one.....',
      currQid: -1,
      loaded: 0, 
      dataHtml: ''
    }
 }


  getAllAnswers = () => {
    var data = '';
    getQAData().then(res => {
        console.log(res);
        if (res === 'No events found') {
          console.log('error... ' )
        } else {
            let currQid = -1;
            let question, answer, q_user, a_user, q_id;
            //let data = '';

            for (var i = 0; i < res.length; ++i) {
                q_id = res[i].q_id;
                question = res[i].question_text;
                answer = res[i].answer_text;
                q_user = res[i].q_username;
                a_user = res[i].a_username;
                
                
                if (currQid !== q_id) {
                  if (currQid !== -1)
                    data += "</div>";

                  data += ' <div style="border:solid 1px gray;margin-bottom:10px; padding:20px;"> ' 

                  data += ' <div style="margin-bottom:10px;"> ' + 
                              ' <div >  ' + 
                                      'Question posted by User: <span style="color:red">' + q_user + '</span> <a href="#">Add your Answer...</a> ' + 
                              ' </div> ' +
                              ' <div style="margin-left:30px;">  ' +
                                  question +  '<button type="button" onClick="openModal()" className="btn btn-danger ">Open Modal</button>' +
                              ' </div> ' +
                          ' </div>';
                  currQid = q_id;
                }
                
                if (answer) {
                  data += ' <div style="border:solid 1px lightgray;margin-bottom:10px;padding:5px;"> ' + 
                              ' <div className="row " >  ' + 
                                      'User: ' + a_user + ' ' +
                              ' </div> ' +
                              ' <div className="row m-2" > ' +
                                      answer + ' ' +
                              ' </div> ' +
                          ' </div>'
                }

                

                console.log(data);
                this.divRef.current.innerHTML = data;

                let dataHtml = this.state.dataHtml
                dataHtml = data;
                this.setState({dataHtml});

                let loaded = this.state.loaded
                loaded = 1;
                this.setState({loaded});
                
            }
          }
      })
  
  }

  

  createQuestion= (e) => {
    createQuestion(this.state.question)
      .then(response => {
        console.log(response);
        
        this.setState({numberOfQs: this.state.numberOfQs + 1})
    });
  }

  createAnswer= (e) => {
    createAnswer(this.state.answer)
      .then(response => {
        console.log(response);
        
        this.setState({numberOfAs: this.state.numberOfAs + 1})
    });
  }

  onChangeForm = (e) => {
    
    let question = this.state.question
    let currQuestionEdit = this.state.currQuestionEdit

    if (e.target.name === 'questionDescription') {
        question = e.target.value;
        console.log("adding: " + question);
    }
    else if (e.target.name === 'questionDescriptionEdit') {
      currQuestionEdit = e.target.value;
      console.log("adding: " + currQuestionEdit);
  }
    this.setState({question})
    this.setState({currQuestionEdit})
  }

  onChangeFormA = (e) => {
    
    let answer = this.state.answer
    
    if (e.target.name === 'answerDescription') {
        answer = e.target.value;
        console.log("adding: " + answer);
    }
    this.setState({answer})
  }

  openModal = (e) => {
    let currQuestionEdit = this.state.currQuestionEdit;
    let currQid = this.state.currQid;

    currQuestionEdit = 'what day is this due?';
    currQid = 1;

    this.setState({currQuestionEdit})
    this.setState({currQid})

    let showModal = this.state.showModal;
    showModal = true;
    this.setState({showModal})
  }

  closeModal = (e) => {
    let showModal = this.state.showModal;
    showModal = false;
    this.setState({showModal})
  }

  editQuestion = (e) => {
    let showModal = this.state.showModal;
    showModal = false;
    this.setState({showModal})

    editQuestion(this.state)
      .then(response => {
        console.log(response);
        
    });
  }


  render() {
    return (
      <>
    
        <MDBContainer>
        {this.state.loaded === 0 ? this.getAllAnswers() : null} 
        <div className="container mt-3">
            <div className="row">
                <div className="col-md-20 mrgnbtm">
                    <h1>Question/Answer Section</h1>
                    <form>
                        <div className="row  ">
                            <div className="form-group col-md-20  p-2">
                                <h3>Add your question</h3>
                                <textarea rows="4" cols="100" onChange={(e) => this.onChangeForm(e)} name='questionDescription'  id='questionDescription' />
                                
                            </div>
                            {/* below to be deleted */}
                            <div className="form-group col-md-20  p-2">
                                <h3>Answer here</h3>
                                <input type="text" onChange={(e) => this.onChangeFormA(e)} name='answerDescription'  id='answerDescription' />
                                
                            </div>
                            {/* above to be deleted */}
                        
                        </div>
                        <button type="button" onClick= {(e) => this.createQuestion()} className="btn btn-danger ">Save</button>
                        <button type="button" onClick= {(e) => this.createAnswer()} className="btn btn-danger ">Save Answer</button>
                        <button type="button" onClick= {(e) => this.openModal()} className="btn btn-danger ">Open Modal</button>
                    </form>

                    <div className="row mt-5 ">
                        <h3>Responses</h3>

                        
                        <div className="row" ref={this.divRef}></div>

                        {/* <DynamicHTML/> */}

                    </div>
                </div>
            </div>
        </div>
        </MDBContainer>


      
        <Modal show={this.state.showModal} onHide={(e) => this.closeModal()} >
          <Modal.Header closeButton>
            <Modal.Title>Edit Question</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <textarea rows="4" cols="45" onChange={(e) => this.onChangeForm(e)} name='questionDescriptionEdit'>  
                {this.state.currQuestionEdit}
            </textarea>
          </Modal.Body>
          <Modal.Footer>
            <Button variant="secondary" onClick={(e) => this.closeModal()} >
              Close
            </Button>
            <Button variant="primary" onClick={(e) => this.editQuestion()} >
              Save Changes
            </Button>
          </Modal.Footer>
        </Modal>

    </>
  );
   }
}

export default Questions;